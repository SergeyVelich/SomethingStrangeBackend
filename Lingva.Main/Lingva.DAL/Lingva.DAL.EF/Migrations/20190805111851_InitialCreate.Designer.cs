// <auto-generated />
using System;
using Lingva.DAL.EF.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lingva.DAL.EF.Migrations
{
    [DbContext(typeof(DictionaryContext))]
    [Migration("20190805111851_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lingva.DAL.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2019, 8, 5, 14, 18, 51, 596, DateTimeKind.Local).AddTicks(4278),
                            ModifyDate = new DateTime(2019, 8, 5, 14, 18, 51, 601, DateTimeKind.Local).AddTicks(5807),
                            Name = "en"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2019, 8, 5, 14, 18, 51, 601, DateTimeKind.Local).AddTicks(8273),
                            ModifyDate = new DateTime(2019, 8, 5, 14, 18, 51, 601, DateTimeKind.Local).AddTicks(8284),
                            Name = "ru"
                        });
                });

            modelBuilder.Entity("Lingva.DAL.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<DateTime>("Date");

                    b.Property<string>("FullText");

                    b.Property<int>("LanguageId");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("PreviewText");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("LanguageId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CreateDate = new DateTime(2019, 8, 5, 14, 18, 51, 602, DateTimeKind.Local).AddTicks(3559),
                            Date = new DateTime(2019, 8, 5, 14, 18, 51, 602, DateTimeKind.Local).AddTicks(3565),
                            FullText = "Good movie",
                            LanguageId = 1,
                            ModifyDate = new DateTime(2019, 8, 5, 14, 18, 51, 602, DateTimeKind.Local).AddTicks(3563),
                            PreviewText = "Good movie"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            CreateDate = new DateTime(2019, 8, 5, 14, 18, 51, 602, DateTimeKind.Local).AddTicks(4863),
                            Date = new DateTime(2019, 8, 5, 14, 18, 51, 602, DateTimeKind.Local).AddTicks(4874),
                            FullText = "Good movie",
                            LanguageId = 1,
                            ModifyDate = new DateTime(2019, 8, 5, 14, 18, 51, 602, DateTimeKind.Local).AddTicks(4872),
                            PreviewText = "Eq"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 1,
                            CreateDate = new DateTime(2019, 8, 5, 14, 18, 51, 602, DateTimeKind.Local).AddTicks(4888),
                            Date = new DateTime(2019, 8, 5, 14, 18, 51, 602, DateTimeKind.Local).AddTicks(4893),
                            FullText = "Good movie",
                            LanguageId = 2,
                            ModifyDate = new DateTime(2019, 8, 5, 14, 18, 51, 602, DateTimeKind.Local).AddTicks(4891),
                            PreviewText = "stuff"
                        });
                });

            modelBuilder.Entity("Lingva.DAL.Entities.PostTag", b =>
                {
                    b.Property<int>("PostId");

                    b.Property<int>("TagId");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<int>("Id");

                    b.Property<DateTime?>("ModifyDate");

                    b.HasKey("PostId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PostTag");

                    b.HasData(
                        new
                        {
                            PostId = 1,
                            TagId = 1,
                            CreateDate = new DateTime(2019, 8, 5, 14, 18, 51, 602, DateTimeKind.Local).AddTicks(5052),
                            Id = 1,
                            ModifyDate = new DateTime(2019, 8, 5, 14, 18, 51, 602, DateTimeKind.Local).AddTicks(5056)
                        },
                        new
                        {
                            PostId = 1,
                            TagId = 2,
                            CreateDate = new DateTime(2019, 8, 5, 14, 18, 51, 602, DateTimeKind.Local).AddTicks(6020),
                            Id = 2,
                            ModifyDate = new DateTime(2019, 8, 5, 14, 18, 51, 602, DateTimeKind.Local).AddTicks(6029)
                        });
                });

            modelBuilder.Entity("Lingva.DAL.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Tag");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2019, 8, 5, 14, 18, 51, 602, DateTimeKind.Local).AddTicks(1618),
                            ModifyDate = new DateTime(2019, 8, 5, 14, 18, 51, 602, DateTimeKind.Local).AddTicks(1631),
                            Name = "coding"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2019, 8, 5, 14, 18, 51, 602, DateTimeKind.Local).AddTicks(1636),
                            ModifyDate = new DateTime(2019, 8, 5, 14, 18, 51, 602, DateTimeKind.Local).AddTicks(1639),
                            Name = "history"
                        });
                });

            modelBuilder.Entity("Lingva.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Email");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2019, 8, 5, 14, 18, 51, 602, DateTimeKind.Local).AddTicks(1923),
                            Email = "veloceraptor89@gmail.com",
                            ModifyDate = new DateTime(2019, 8, 5, 14, 18, 51, 602, DateTimeKind.Local).AddTicks(1927),
                            Name = "Serhii"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2019, 8, 5, 14, 18, 51, 602, DateTimeKind.Local).AddTicks(3380),
                            Email = "tucker_serega@mail.ru",
                            ModifyDate = new DateTime(2019, 8, 5, 14, 18, 51, 602, DateTimeKind.Local).AddTicks(3388),
                            Name = "Eugeniya"
                        });
                });

            modelBuilder.Entity("Lingva.DAL.Entities.Post", b =>
                {
                    b.HasOne("Lingva.DAL.Entities.User", "Author")
                        .WithMany("Posts")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Lingva.DAL.Entities.Language", "Language")
                        .WithMany("Posts")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Lingva.DAL.Entities.PostTag", b =>
                {
                    b.HasOne("Lingva.DAL.Entities.Post", "Post")
                        .WithMany("PostTags")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Lingva.DAL.Entities.Tag", "Tag")
                        .WithMany("PostTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
